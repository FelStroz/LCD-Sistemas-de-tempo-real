/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : LCD1.c
**     Project     : Power Systems
**     Processor   : STM32F051
**     Component   : LCD
**     Version     : 2.0
**     Compiler    : MDK-ARM
**     Date/Time   : 2019-04-11
**     Abstract    :
**          This component implements a driver for 2x16 character displays.
**     Settings    :
**          Component name                                 : LCD1
**          HW Interface                                   : 
**            LCD Type                                     : generic
**            LCD Lines                                    : 2
**            Characters per Line                          : 16
**            Line Addresses                               : 
**              Line 1                                     : 00
**              Line 2                                     : 40
**              Line 3                                     : 10
**              Line 4                                     : 50
**            Read from Display                            : Disabled
**            Wait (us)                                    : 0
**            E signal                                     : CtrlPin
**            RS signal                                    : CtrlPin
**            Data/Control Bus                             : 
**              Data/Control Bus Width                     : 4bit
**              DB4..DB7                                   : Enabled
**     Contents    :
**         WriteLCDCommand  - void LCD1_WriteLCDCommand(uint8_t cmd);
**         Write            - void LCD1_Write(char ch);
**         WriteLn          - void LCD1_WriteLn(void);
**         WriteLineStr     - void LCD1_WriteLineStr(uint8_t line, char *str);
**         WriteString      - void LCD1_WriteString(char *str);
**         ShiftLeft        - void LCD1_ShiftLeft(void);
**         ShiftRight       - void LCD1_ShiftRight(void);
**         GotoXY           - void LCD1_GotoXY(uint8_t line, uint8_t column);
**         SetEntryMode     - void LCD1_SetEntryMode(bool increment, bool shiftLeft);
**         CursorShiftRight - void LCD1_CursorShiftRight(void);
**         CursorShiftLeft  - void LCD1_CursorShiftLeft(void);
**         Home             - void LCD1_Home(void);
**         Line             - void LCD1_Line(uint8_t line);
**         Clear            - void LCD1_Clear(void);
**         LCD1_DefineChars - void LCD1_DefineChars(void);
*
** ###################################################################*/
/*!
** @file LCD1.c
** @version 01.00
** @brief
**          This component implements a driver for multiple 2x16 character displays.
*/         
/*!
**  @addtogroup LCD1_module LCD1 module documentation
**  @{
*/         

#ifndef __LCD1_H
#define __LCD1_H

/* MODULE LCD1. */

/* Include shared modules, which are used for whole project */
#include "stm32f4xx_hal.h"
#include "cmsis_os.h"
/* Include inherited beans */


/* ID's for the soft characters defined in CGRAM  */
#define LCD1_SOFTCHAR_CH 1 /*<! ID for 'ç' */
#define LCD1_SOFTCHAR_AT 2 /*<! ID for 'ã' */
#define LCD1_SOFTCHAR_EH 3 /*<! ID for 'é' */


#define LCD1_MAX_LCD_LINE_CHARS  16 /* number of chars of the LCD on a line */


void LCD1_WriteLCDData(uint8_t ch);
/*
** ===================================================================
**     Method      :  LCD1_WriteLCDData (component LCDHTA)
**
**     Description :
**         Writes data to the display
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

void LCD1_Init(void);
/*
** ===================================================================
**     Method      :  LCD1_Init (component LCDHTA)
**
**     Description :
**         Display driver initialization routine.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

void LCD1_Clear(void);
/*
** ===================================================================
**     Method      :  LCD1_Clear (component LCDHTA)
**     Description :
**         Clears the display and moves the cursor to the first line.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_Home(void);
/*
** ===================================================================
**     Method      :  LCD1_Home (component LCDHTA)
**     Description :
**         Moves the cursor to the beginning of the first line.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_GotoXY(uint8_t line, uint8_t column);
/*
** ===================================================================
**     Method      :  LCD1_GotoXY (component LCDHTA)
**     Description :
**         Places the cursor on a specified position on the display.
**     Parameters  :
**         NAME            - DESCRIPTION
**         line            - Line number starting with 1
**         column          - Column number starting with 1
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_ShiftLeft(void);
/*
** ===================================================================
**     Method      :  LCD1_ShiftLeft (component LCDHTA)
**     Description :
**         Shifts all characters to the left.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

#define LCD1_Write(ch)   LCD1_WriteLCDData((uint8_t)ch)
/*
** ===================================================================
**     Method      :  LCD1_Write (component LCDHTA)
**     Description :
**         Write a single character to the display
**     Parameters  :
**         NAME            - DESCRIPTION
**         ch              - Character to write
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_WriteLn(void);
/*
** ===================================================================
**     Method      :  LCD1_WriteLn (component LCDHTA)
**     Description :
**         Writes a new line to the display
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_WriteString(char *str);
/*
** ===================================================================
**     Method      :  LCD1_WriteString (component LCDHTA)
**     Description :
**         Writes a string to the display at the current cursor
**         position.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * str             - Pointer to string (zero byte terminated)
**                           to write to the display
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_WriteLineStr(uint8_t line, char *str);
/*
** ===================================================================
**     Method      :  LCD1_WriteLineStr (component LCDHTA)
**     Description :
**         Writes a full line to the display (clears the rest of the
**         line).
**     Parameters  :
**         NAME            - DESCRIPTION
**         line            - Line number (starting with 1).
**       * str             - Pointer to the string which should be
**                           shown on the display.
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_Line(uint8_t line);
/*
** ===================================================================
**     Method      :  LCD1_Line (component LCDHTA)
**     Description :
**         Sets the current line.
**     Parameters  :
**         NAME            - DESCRIPTION
**         line            - Line number, starting with 1
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_ShiftRight(void);
/*
** ===================================================================
**     Method      :  LCD1_ShiftRight (component LCDHTA)
**     Description :
**         Shifts all characters to the right.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_SetEntryMode(uint8_t increment, uint8_t shiftLeft);
/*
** ===================================================================
**     Method      :  LCD1_SetEntryMode (component LCDHTA)
**     Description :
**         Configures the display entry mode, if the cursor has to
**         shift and/or if the display shall shift content while
**         displaying text.
**     Parameters  :
**         NAME            - DESCRIPTION
**         increment       - Increments (TRUE) or
**                           decrements (FALSE) the display address by 1
**                           when a character code is written into or
**                           read from DDRAM. The cursor or blinking
**                           moves to the right when incremented by 1
**                           and to the left when decremented by 1.
**         shiftLeft       - The display does not shift if
**                           the 'shift' is FALSE. If 'shift' is TRUE,
**                           it will seem as if the cursor does not move
**                           but the display does.
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_WaitForLCDReady(void);
/*
** ===================================================================
**     Method      :  LCD1_WaitForLCDReady (component LCDHTA)
**
**     Description :
**         Waits until the display is ready
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

void LCD1_CursorShiftRight(void);
/*
** ===================================================================
**     Method      :  LCD1_CursorShiftRight (component LCDHTA)
**     Description :
**         Shift the cursor to the right.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_CursorShiftLeft(void);
/*
** ===================================================================
**     Method      :  LCD1_CursorShiftLeft (component LCDHTA)
**     Description :
**         Shift the cursor to the left.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void LCD1_WriteLCDCommand(uint8_t cmd);
/*
** ===================================================================
**     Method      :  LCD1_WriteLCDCommand (component LCDHTA)
**     Description :
**         Writes a command to the display
**     Parameters  :
**         NAME            - DESCRIPTION
**         cmd             - command passed to the LCD
**     Returns     : Nothing
** ===================================================================
*/

/* END LCD1. */

#endif
/* ifndef __LCD1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
